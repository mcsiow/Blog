[
  {
    "path": "posts/2021-01-23-dataviz-makeover-1/",
    "title": "DataViz Makeover 1",
    "description": "My DataViz Makeover 1 for ISSS608",
    "author": [
      {
        "name": "Siow Mun Chai",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-01-23",
    "categories": [],
    "contents": "\r\nData Visualisation Critique\r\nThe original visualisation (as follows) is the Resident labour force by age (Chart 6) in MOM’s Report. \r\nClarity\r\nS/N\r\nCRITIQUES\r\nSUGGESTIONS\r\n1.\r\nThere is no Y axis in the visualisation. Therefore, the value of the line graph is not immediately obvious.\r\nTo include Y axis and gridline to guide the eyes.\r\n2.\r\nIt is not intuitive to know which value on the X-axis represent the age and which is the labour force participating rate.\r\nTo include clear labels for the axis.\r\n3.\r\nThe visualisation shows the median age for 2009 is 41 years and the median age for 2019 is 44 years. However, the line graph do not have any statistical information to derive the median age but reference lines were drawn to intercept with the line graph. Inferring that the line graph could generate the median age.\r\nTo remove median data from the visualisation.\r\n4.\r\nThe objective of the visualisation is to show there are more older residents in the labour force since 2009. The visualisation only show data for 2009 and 2019 and not the data between 2009 to 2019. The increasing trend is not apparent to the readers.\r\nTo include data points for the years between 2009 and 2019.\r\n5.\r\nClear graph title to tell readers the context.\r\nTo retain the use of title.\r\n6.\r\nX-axis title could be better positioned and named to provide context.\r\nTo re-position the X-axis title.\r\n7.\r\nSource where the information were from were highlighted to give assurance to reader on the accuracy of the data.\r\nTo retain the source information on the visualisation.\r\nAesthetics\r\nS/N\r\nCRITIQUES\r\nSUGGESTIONS\r\n1.\r\nGood use of colour to differentiate 2009 and 2019 values.\r\nTo maintain the use of colour to differentiate values.\r\n2.\r\nGood font and good font size to detailed out the information.\r\nTo maintain the use of good font and good font size.\r\n3.\r\nUnits are not indicated at the X-axis tick values. Might be hard for readers to interpret what the values represent.\r\nTo provide unit details at the axis.\r\n4.\r\nThe visualisation is not well-balanced as there are too much data value at the X-axis.\r\nTo balance out the data values across the visualisation.\r\nProposed Design\r\n - Provide the data value from 2009 to 2019 so that readers could see the trend. - Grouped the data value (line graph) into 15-24, 25-54 and 54 & above so that readers can clearly see the different categorisation as highlighted in the writeup. - Show the absolute values and the labour participation rate for each of the year, so that readers are able to better appreciate the context.  - Include the labour participation rate and labour participation (in thousands) as the Y-axis so that readers could know reference the value of the line graph.  - Provide labels to describe the axes. - Removed median data from the visualisation as the data values in the visualisation is not able to calculate the median.\r\nData Visualisation Steps\r\nS/N\r\nSTEPS\r\nACTIONS\r\n1.\r\nImport excel file (mrsd_2019LabourForce_T7.xlsx) into Tableau Prep Builder.\r\n1. Select T7_T from the Connection Pane and Single Table in the Input Pane. 2. Add a “Clean Step”\r\n2.\r\nCommence Data Preparation\r\n1. Remove first 6 rows of the data which are all title information. 2. Remove columns with NULL values.  3. Rename first column to Age and the rest of columns to the year starting from 2009 to 2019. 4. Select column 2009 to 2019, pivot the columns to rows. 5. Rename Pivot 1 Name to Year and Pivot 1 Value to Population.\r\n3.\r\nSave the data\r\nSave the output as Output.hyper.\r\n4.\r\nImport the Output.hyper to Tableau\r\n1. Import data into Tableau.  2. Change the data type for Year from String to Date. 3. Change the data type for Population from String to Number(Decimal).\r\n5.\r\nCreate Visualisation for Participation Rate\r\n1. Go to Sheet 1. 2. Drag Year to Columns. 3. Drag Population to Rows. 4. Change the measures for Population to SUM. 5. Change the Percentage of to Cell.\r\n6.\r\nGrouping of Age Group\r\n1. Select 15-19 and 20-24, right click and Grouped them. 2. Select 25-29, 30-34, 35,39,40-44, 45-49 and 50-54 and Grouped them. 3. Select 55-59,60-64, 65-69 and 70 & Over and Grouped them. 4. Rename each of the Age Category and Title. 5. Show the Hide Marker. 6. Rename the Title and axis labels and provide Source information under Caption. 7. Rename the sheet to \"Labour(%)\r\n\r\n\r\n\r\n7.\r\nCreate Visualisation for Population (In Thousands)\r\n1. Duplicate Sheet 1.  2. Click on the row SUM(Population), click “Clear Table Calculation”. 3. Rename the Y-axis title. 4. Rename the sheet to \"Labour(In Thousands)\r\n8.\r\nCreate Dashboard\r\n1. Add a new dashboard  2. Drag Labour(%) to the left of the dashboard and Labour(In Thousands) to the right. 3. Rename the Dashboard Title. 4. Export the dashboard as image.\r\n\r\n\r\n\r\nFinal Data Visualisation Output\r\n\r\nObservation 1\r\nAlthough the labour force participation rate shows the share of resident labour force aged 25-54 declined from 75% to 67%, the absolute number of people in the age band actually increases (from 1496 thousands in 2009 to 1570 thousands in 2019)\r\nObservation 2\r\nOver the last 10 years, both the 25-54 and 15-24 age bands showed a downward trend for the participation rate while the 55 years and above showed a upward trend. Might be due to ageing population and low birth rate.\r\nObservation 3\r\nTotal number of people in the working population increases over the years (from 1986 thousands in 2009 to 2328 thousands in 2019).\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-01-27T21:51:35+08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-01-06-my-first-post/",
    "title": "My First Post",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Siow Mun Chai",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-01-06",
    "categories": [],
    "contents": "\r\n1.0 Overview\r\nCorrelation coefficient is a popular statistic that use to measure the type and strength of the relationship between two variables. The values of a correlation coefficient ranges between -1.0 and 1.0. A correlation coefficient of 1 shows a perfect linear relationship between the two variables, while a -1.0 shows a perfect inverse relationship between the two variables. A correlation coeficient of 0.0 shows no linear relationship between the two variables.\r\nWhen multivariate data are used, the correlation coeficeints of the pair comparisons are displayed in a table form known as correlation matrix or scatterplot matrix.\r\nThere are three broad reasons for computing a correlation matrix.\r\nTo reveal the relationship between highdimensional variables pairwisely.\r\nTo input into other analyses. For example, people commonly use correlation matrixes as inputs for exploratory factor analysis, confirmatory factor analysis, structural equation models, and linear regression when excluding missing values pairwise.\r\nAs a diagnostic when checking other analyses. For example, with linear regression a high amount of correlations suggests that the linear regression’s estimates will be unreliable.\r\nWhen the data is large, both in terms of the number of observations and the number of variables, Corrgram tend to be used to visually explore and analyse the structure and the patterns of relations among variables. It is designed based on two main schemes:\r\nRendering the value of a correlation to depict its sign and magnitude, and\r\nReordering the variables in a correlation matrix so that “similar” variables are positioned adjacently, facilitating perception.\r\nIn this hands-on exercise, you will learn how to plot data visualisation for visualising correlation matrix with R. It consists of three main sections. First, you will learn how to create correlation matrix using pairs() of R Graphics. Next, you will learn how to plot corrgram using corrplot package of R Lastly, you will learn how to create an interactive correlation matrix using plotly R. .\r\n2.0 Installing and Launching R Packages\r\nBefore you get started, you are required:\r\nto start a new R project, and\r\nto create a new R Markdown document.\r\nNext, you will use the code chunk below to install and launch corrplot, ggpubr, plotly and tidyverse in RStudio.\r\n\r\n\r\npackages = c('ggpubr', 'tidyverse')\r\n\r\nfor(p in packages){library\r\n  if(!require(p, character.only = T)){\r\n    install.packages(p)\r\n  }\r\n  library(p, character.only = T)\r\n}\r\n\r\n\r\n\r\n3.0 Importing and Preparing The Data Set\r\nIn this hands-on exercise, the Wine Quality Data Set of UCI Machine Learning Repository will be used. The data set consists of 13 variables and 6497 observations. For the purpose of this exercise, we have combined the red wine and white wine data into one data file. It is called wine_quality and is in csv file format.\r\n3.1 Importing Data\r\nFirst, let us import the data into R by using read_csv() of readr package.\r\n\r\n\r\nwine <- read_csv(\"data/wine_quality.csv\")\r\n\r\n\r\n\r\nNotice that beside quality and type, the rest of the variables are numerical and continuous data type.\r\n4.0 Univariate EDA with Histogram\r\nIn the figure below, multiple histograms are plottted to reveal the distribution of the selected variables in the wine quality data sets.\r\n\r\n\r\n\r\nThe code chunks used to create the data visualisation consists of two main parts. First, we will create the individual histograms using the code chunk below.\r\n\r\n\r\nfa <- ggplot(data=wine, aes(x= `fixed acidity`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nva <- ggplot(data=wine, aes(x= `volatile acidity`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nca <- ggplot(data=wine, aes(x= `citric acid`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nrs <- ggplot(data=wine, aes(x= `residual sugar`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nch <- ggplot(data=wine, aes(x= `chlorides`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nfSO2 <- ggplot(data=wine, aes(x= `free sulfur dioxide`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\ntSO2 <- ggplot(data=wine, aes(x= `total sulfur dioxide`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\ndensity <- ggplot(data=wine, aes(x= density)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\npH <- ggplot(data=wine, aes(x= pH)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nsulphates <- ggplot(data=wine, aes(x= sulphates)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nalcohol <- ggplot(data=wine, aes(x= alcohol)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\n\r\n\r\n\r\nNext, the ggarrange function of ggpur package is used to group these histograms together.\r\n\r\n\r\nggarrange(fa, va, ca, rs, ch, fSO2, tSO2, density, pH, sulphates, alcohol, \r\n          ncol = 4, nrow = 3)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-01-06-my-first-post/my-first-post_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2021-01-23T14:11:11+08:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to IDEA",
    "description": "Welcome to our new blog, IDEA. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Siow Mun Chai",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-01-06",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-01-06T21:39:44+08:00",
    "input_file": {}
  }
]
